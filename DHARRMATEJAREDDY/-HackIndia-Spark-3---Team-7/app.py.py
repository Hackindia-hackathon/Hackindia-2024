# -*- coding: utf-8 -*-
"""car_price_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jI6i2kO2Z9MlCGMWJEjJT11dJUBJjirI

Importing all libraries
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.linear_model import Lasso
from sklearn.metrics import r2_score

"""load the data set with the help of pandas library"""

df=pd.read_csv('https://github.com/Dharrma/CAR_PRICE_DETECTION/raw/main/FINAL%20PROJECT.csv')

"""Summarize the data set"""

#displays the first 5 rows in the form of data frame
df.head()

#displaying the information about the data that may contains the how many columns,rows present in the data set and displays the data type of the column
df.info()

#here we finds the null values are missing values
df.isnull().sum()

#displays the stastical information of the data set
df.describe()

df.shape #displays the shape of the dataset

"""separates categerial information"""

df['Fuel_Type'].value_counts()

df['Seller_Type'].value_counts()

df['Transmission'].value_counts()

"""encoding the related numerical values to the features"""

df.replace({'Fuel_Type':{'Petrol':0,'Diesel':1,'CNG':2}},inplace=True)
df.replace({'Seller_Type':{'Dealer':0,'Individual':1}},inplace=True)
df.replace({'Transmission':{'Manual':0,'Automatic':1}},inplace=True)

df.head()

"""separates the target value"""

from sklearn.preprocessing import LabelEncoder

lb=LabelEncoder()

df.head()

X=df[['Year','Present_Price','Kms_Driven','Fuel_Type',	'Seller_Type',	'Transmission',	'Owner']]
Y=df['Selling_Price']

X

Y

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.1,random_state=2)

model=Lasso()

train=model.fit(X_train,Y_train)

train_predict_model=model.predict(X_train)

accuracy = r2_score(Y_train, train_predict_model)
print(accuracy)

# Function to take user inputs and predict the car price
def predict_car_price():
    # User inputs
    year = int(input("Enter the year of the car: "))
    present_price = float(input("Enter the present price of the car (in lakhs): "))
    kms_driven = int(input("Enter the kilometers driven: "))
    fuel_type = int(input("Enter the fuel type (Petrol: 0, Diesel: 1, CNG: 2): "))
    seller_type = int(input("Enter the seller type (Dealer: 0, Individual: 1): "))
    transmission = int(input("Enter the transmission type (Manual: 0, Automatic: 1): "))
    owner = int(input("Enter the number of previous owners: "))

    # Creating a DataFrame for the input values
    input_data = pd.DataFrame([[year, present_price, kms_driven, fuel_type, seller_type, transmission, owner]],
                              columns=['Year', 'Present_Price', 'Kms_Driven', 'Fuel_Type', 'Seller_Type', 'Transmission', 'Owner'])

    # Predicting the price
    predicted_price = model.predict(input_data)

    # Displaying the predicted price
    print(f"The predicted selling price of the car is: {predicted_price[0]:.2f} lakhs")

# Call the function to predict car price
predict_car_price()

